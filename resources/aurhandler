#!/usr/bin/env bash

source /etc/lemon/resources/lemonlib

#
#  AUR package installation logic. This should be in lemonlib as a function, but doesn't work when I put it there because Brian Fox is a fucking sadist.
#  Bash script exists to teach us all a lesson in humility.
#
#  edit: still didn't work. It's now a copy-paste from aurtool because reasons. 

OP=$1

if [ "$OP" == -S ]; then
  for b in ${@:2}; do
    cd $HOME
    mkdir .aurtool
    cd .aurtool
    git clone http://aur.archlinux.org/$b.git
    cd $b
    PKGB=./PKGBUILD
    if [ ! -f $PKGB ]; then
      echo "Error: package does not exist by the name $b!"
      echo "Aborting"
      echo "Failed AUR package: $b (package does not exist!)" >> /home/aur/aur.log
      false
    fi
    #
    # Yes, this is a pointless function that uses up 3 lines unnecessarily. The script didn't behave properly without it. Bash has moods, and Brian Fox hates us all.
    #
    function PKGBUILD {
    if isyes "Would you like to edit the PKGBUILD? (Y/n)" ; then
      if which nano &> /dev/null; then
        nano ./PKGBUILD
      else
        if which vim &> /dev/null; then
          vim ./PKGBUILD
        else
          echo "No suitable text editor found!"
          echo "If one is present on the system, enter its command now (eg: nano, vim, emacs, etc). Otherwise leave blank to skip PKGBUILD editing."
          read PKGEDIT
          if [ -v $PKGEDIT ]; then 
            $PKGEDIT ./PKGBUILD
          fi
        fi
      fi
    fi
    }
    PKGBUILD
    unset makedepends
    unset optdepends
    unset depends
    source ./PKGBUILD
    uDEPS=(${makedepends[@]} ${depends[@]})
    for i in ${uDEPS[@]}; do
      i=${i%=*}
      i=${i%>*}
      i=${i%<*}
      DEPS=(${DEPS[@]} $i)
    done
    for i in ${DEPS[@]}; do
      if ! pacman -Ql $i &> /dev/null; then
        echo "Trying to install $i with pacman (dependency)"
        if ! sudo pacman -S --noconfirm --needed $i; then
          echo "Installing $i with pacman failed"
          echo "Trying to install $i from AUR"
          if ! NODEL=1 aurhandler -S $i; then
            echo "FATAL: Unable to install dependency $i!"
            echo "Failed AUR package: $b (failed to install dependency $i)" >> /home/aur/aur.log
            false
          fi
        fi
      fi
    done
    if ! makepkg -csi || false; then
      echo "Error! Aborting"
      cd $HOME
      echo "Failed AUR package: $b (build failure)" >> /home/aur/aur.log
      false
    fi
    cd $HOME/.aurtool
  done
  if [ -z "$NODEL" ]; then
    NODEL="1"
  fi
  if [ ! "$NODEL" == 1 ]; then
    if isyes "Build files and / or built packages are stored in .aurtool in your home directory. Would you like to delete them? (Y/n)"; then
      echo "Cleaning up.."
      rm -rf $HOME/.aurtool
    fi
  fi
fi
