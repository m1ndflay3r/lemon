#!/usr/bin/env bash

source /etc/lemon/resources/lemonlib
source /etc/lemon/lemon.conf

#
#  AUR package installation logic.
#
#  Yes, there's a lot of redundant BS here. No, you can't fix it easily, as the script breaks without it because this is bash so of course it does.
#  Yes, this should be in lemonlib as a function. No, it didn't work when I did that for no reason other than Brian Fox is a fucking sadist.
#
#  Don't believe me? Try it for yourself then I dare you. You'll never be the same after you're through, though. Nobody ever is.
#
#
#  May Brian have mercy on your soul.
#

OP=$1

if [ "$OP" == -S ]; then
  for b in ${@:2}; do
    cd $HOME
    mkdir .aurtool
    cd .aurtool
    git clone http://aur.archlinux.org/$b.git
    cd $b
    PKGB=./PKGBUILD
    PKGBUILDBLANK="0"
    if [ ! -f $PKGB ]; then
      ctext magenta std "Error: package does not exist by the name $b!"
      ctext magenta std "Aborting"
      echo "Failed AUR package: $b (package does not exist!)" >> /home/aur/aur.log
      PKGBUILDBLANK="1"
      false
    fi
    function PKGBUILD {
      if [ ! $PKGBUILDBLANK == 1 ]; then
        if isyes "$(ctext cyan nnl "Would you like to edit the PKGBUILD? (Y/n)")" ; then
          if ! which $EDITOR &> /dev/null; then
            EDITOR="vim"
          fi
          if ! which $EDITOR &> /dev/null; then
            ctext magenta std "No suitable text editor found!"
            ctext magenta nnl "If one is present on the system, enter its command now (eg: nano, vim, emacs, etc). Otherwise leave blank to skip PKGBUILD editing. : "
            read EDITOR
            if [ -z "$EDITOR" ]; then
              EDITOR="NULL"
            fi
            if [ -v $EDITOR ]; then
              $EDITOR ./PKGBUILD
            fi
          else
            $EDITOR ./PKGBUILD
          fi
        fi
      fi
    }
    PKGBUILD
    if [ ! $PKGBUILDBLANK == 1 ]; then
      unset makedepends
      unset optdepends
      unset depends
      source ./PKGBUILD
      uDEPS=(${makedepends[@]} ${depends[@]})
      for i in ${uDEPS[@]}; do
        i=${i%=*}
        i=${i%>*}
        i=${i%<*}
        DEPS=(${DEPS[@]} $i)
      done
      for i in ${DEPS[@]}; do
        if ! pacman -Ql $i &> /dev/null; then
          ctext cyan std "Trying to install $i with pacman (dependency)"
          if ! sudo pacman -S --noconfirm --needed $i; then
            ctext magenta std "Installing $i with pacman failed"
            ctext cyan std "Trying to install $i from AUR"
            if ! aurhandler -S $i; then
              ctext magenta std "FATAL: Unable to install dependency $i!"
              echo "Failed AUR package: $b (failed to install dependency $i)" >> /home/aur/aur.log
              DEPBROKEN="1"
              false
            else
              DEPBROKEN="0"
            fi
          fi
        fi
      done
      if [ -z "$DEPBROKEN" ]; then
        DEPBROKEN="0"
      fi
      if [ ! $DEPBROKEN == 1 ]; then
        if ! makepkg -csi || false; then
          ctext magenta std "Makepkg failed!"
          cd $HOME
          echo "Failed AUR package: $b (build failure)" >> /home/aur/aur.log
          false
        fi
      fi
    fi
    cd $HOME/.aurtool
  done
fi
